#!/bin/bash

# Fun√ß√£o para verificar se o Git est√° instalado
check_git_installed() {
  if ! command -v git &> /dev/null; then
    echo -e "\033[31mErro: Git n√£o est√° instalado na sua m√°quina.\033[0m"
    exit 1
  fi
}

# Fun√ß√£o para verificar se a mensagem de commit segue o Conventional Commits Pattern
check_commit_message() {
  local commit_message="$1"
  local pattern='^(build|ci|docs|feat|fix|perf|refactor|style|test|chore)(\([^\)]+\))?(!)?: .{1,100}$'

  if ! [[ $commit_message =~ $pattern ]]; then
    echo -e "\033[31mErro: A mensagem do commit n√£o segue o padr√£o Conventional Commits.\033[0m"
    echo -e "\033[31mPadr√£o esperado: '<type>(<escopo>): <descri√ß√£o>'.\033[0m"
    echo -e "\033[31mExemplo: 'feat: adicionar nova funcionalidade'.\033[0m"
    exit 1
  fi
}

# Verifica se o Git est√° instalado
check_git_installed

# Obt√©m a mensagem de commit a partir dos argumentos
commit_message="$*"

# Verifica se a mensagem de commit segue o padr√£o
check_commit_message "$commit_message"

# Se chegou at√© aqui, a mensagem de commit est√° correta
echo -e "\033[34mMensagem de commit v√°lida! √ìtimo trabalho! üëç\033[0m"

# Realiza o commit utilizando o comando git commit
git commit -m "$commit_message"
